on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  build_linux:
    name: Build Wheel - Linux
    runs-on: ubuntu-latest
    container:
      image: matrixji/python-milvus-server-builder:manylinux2004-1
      env:
        BUILD_ALREADY_IN_DOCKER: "YES"
        HOME: /tmp
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache go
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: linux-go-${{ hashFiles('milvus_binary/env.sh') }}
          restore-keys: linux-go-
      - name: Cache conan
        uses: actions/cache@v3
        with:
          path: |
            ~/.conan/data
          key: linux-conan-${{ hashFiles('milvus_binary/env.sh') }}
          restore-keys: linux-conan-
      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.ccache
          key: linux-ccache-${{ hashFiles('milvus_binary/env.sh') }}
          restore-keys: linux-ccache-
      - name: Build Wheel
        run: |
          python3.8 -m build -w -n
      - uses: actions/upload-artifact@v3
        with:
          name: wheel_linux
          path: dist/*.whl
          retention-days: 5
  build_macos:
    name: Build Wheel - macOS
    runs-on: macos-11
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache go
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: macos-go-${{ hashFiles('milvus_binary/env.sh') }}
          restore-keys: macos-go-
      - name: Cache conan
        uses: actions/cache@v3
        with:
          path: |
            ~/.conan/data
          key: macos-conan-${{ hashFiles('milvus_binary/env.sh') }}
          restore-keys: macos-conan-
      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.ccache
          key: macos-ccache-${{ hashFiles('milvus_binary/env.sh') }}
          restore-keys: macos-ccache-
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '~1.18.10'
      - name: Build Wheel
        run: |
          python3 -m pip install build wheel setuptools
          python3 -m build -w -n
      - uses: actions/upload-artifact@v3
        with:
          name: wheel_macos
          path: dist/*.whl
          retention-days: 5

  acceptance_test_many_linux:
    needs:
      - build_linux
    name: Acceptance Test ${{ matrix.os }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu:18.04", "ubuntu:22.04", "centos:7", "fedora:36"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: wheel_linux
          path: dist
      - name: Install python3 for os
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "centos:7" ]] ; then
            yum -y install epel-release
            yum -y install python36 python36-pip python36-wheel
          elif [[ "${{ matrix.os }}" == "fedora:36" ]] ; then
            dnf -y install python3 python3-pip python3-wheel python3-devel gcc gcc-c++
          elif [[ "${{ matrix.os }}" =~ "ubuntu" ]] ; then
            apt update
            apt -y install python3 python3-pip python3-wheel
          fi
      - name: Run hello milvus
        run: |
          python3 -m pip install -U pip 
          python3 -m pip install "$(echo dist/*.whl)[client]"
          cd examples
          python3 example.py
  acceptance_test_macos:
    needs:
      - build_macos
    name: Acceptance Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-11", "macos-12"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: actions/download-artifact@v3
        with:
          name: wheel_macos
          path: dist
      - name: Run hello milvus
        run: |
          python3 -m pip install wheel setuptools
          python3 -m pip install "$(echo dist/*.whl)[client]"
          cd examples
          python3 example.py
